{"version":3,"sources":["app.min.js"],"names":["NoahsApp","angular","module","config","$stateProvider","$urlRouterProvider","console","log","otherwise","state","url","templateUrl","controller","controllerAs","service","$http","this","requestTifs","apikey","query","method","data","then","result","err","message","createPumpMarkers","pumpdata","pumps","i","length","pump","newPump","L","marker","latidute","longitude","bindPopup","id","openPopup","push","fetchPumpData","$scope","FmiAPIService","api_field","query_field","fmilink","tiflinks","sendRequest","generateMap","index","picture","PictureService","requestRadarPicture","conversion","a","b","firstProjection","secondProjection","coordinates","proj4","name","crs","Proj","CRS","TMS","resolutions","mymap","Map","continuousWorld","worldCopyJump","zoomControl","layers","tileUrl","attrib","tilelayer","TileLayer","maxZoom","minZoom","tileSize","tms","attribution","subdomains","tutkakuvaUrl","tutkakuvaBounds","imageOverlay","addTo","addLayer","setView","oikeaTuppi","vasenYla","oikeaAla","vasenAla","vimpeli","utajarvi","petajavesi","kuopio","kitee","joku2","joku","jokuryhma","layerGroup","circle","color","fillColor","fillOpacity","directive","$stateParams","PumpService"],"mappings":"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","file":"app.min.js","sourcesContent":["var NoahsApp = angular.module(\"NoahsApp\", [\"ui.router\"]);\n\nNoahsApp.config([\"$stateProvider\", \"$urlRouterProvider\", function($stateProvider, $urlRouterProvider) {\r\n  console.log(\"heippa\");\r\n  $urlRouterProvider.otherwise(\"/\");\r\n\r\n  $stateProvider\r\n    .state(\"main\", {\r\n      url: \"/\",\r\n      templateUrl: \"app/components/main/main.html\",\r\n      controller: \"MainController\",\r\n      controllerAs: \"main\"\r\n    })\r\n    .state(\"map\", {\r\n      url: \"/map\",\r\n      templateUrl: \"app/components/map/map.html\",\r\n      controller: \"MapController\",\r\n      controllerAs: \"map\"\r\n    })\r\n    .state(\"pump\", {\r\n      url: \"/pump/:id\",\r\n      templateUrl: \"app/components/pump/pump.html\",\r\n      controller: \"PumpController\",\r\n      controllerAs: \"pump\"\r\n    })\r\n}])\r\n\nNoahsApp.service(\"FmiAPIService\", [\"$http\", function($http) {\r\n  this.requestTifs = function(apikey, query) {\r\n    var config = {\r\n      method: \"POST\",\r\n      url: \"http://localhost:8088/radar\",\r\n      data: {\r\n        apikey: apikey,\r\n        query: query,\r\n      }\r\n    }\r\n    return $http(config)\r\n      .then(function(result) {\r\n        console.log(result);\r\n        return result.data;\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Calling API produced an error:\");\r\n        console.log(err.data.message);\r\n        return [];\r\n      })\r\n  }\r\n}]);\r\n\nNoahsApp.service(\"PumpService\", [\"$http\", function($http) {\r\n  this.createPumpMarkers = function(pumpdata) {\r\n    var pumps = [];\r\n    for(var i = 0; i < pumpdata.length; i++) {\r\n      var pump = pumpdata[i];\r\n      var newPump = L.marker([pump.latidute, pump.longitude])\r\n        .bindPopup(\"Pumppu \" + pump.id).openPopup();\r\n      pumps.push(newPump);\r\n    }\r\n    return pumps;\r\n  }\r\n  this.fetchPumpData = function() {\r\n    var config = {\r\n      method: \"POST\",\r\n      url: \"http://10.144.72.11\",\r\n      data: {\r\n        apikey: apikey,\r\n        query: query,\r\n      }\r\n    }\r\n    return $http(config)\r\n      .then(function(result) {\r\n        console.log(result);\r\n        return result.data;\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Calling API produced an error:\");\r\n        console.log(err.data.message);\r\n        return [];\r\n      })\r\n  }\r\n}])\r\n\nNoahsApp.controller(\"MainController\", [\"$scope\", \"FmiAPIService\", function($scope, FmiAPIService) {\r\n  $scope.api_field = \"5c2fc68e-d165-45f5-af8f-ce9fc0b36e68\";\r\n  $scope.query_field = \"/wfs?request=GetFeature&storedquery_id=fmi::radar::composite::rr\";\r\n  $scope.fmilink = \"asdf\";\r\n  $scope.tiflinks = [];\r\n  $scope.sendRequest = function() {\r\n    FmiAPIService\r\n    .requestTifs($scope.api_field, $scope.query_field)\r\n    .then(function(result) {\r\n      $scope.fmilink = result.fmilink;\r\n      $scope.tiflinks = result.tiflinks;\r\n    })\r\n  }\r\n  $scope.generateMap = function(index) {\r\n    var picture = $scope.tiflinks[index];\r\n      PictureService\r\n      .requestRadarPicture(picture)\r\n      .then(function(result) {\r\n\r\n      })\r\n  }\r\n}])\r\n\nNoahsApp.controller(\"MapController\", [\"$scope\", function($scope) {\r\n  console.log(\"test controllerissa filussa\");\r\n  $scope.name = \"olen testiä\";\r\n\r\n  function conversion(a, b) {\r\n    var firstProjection = \"+proj=utm +zone=35 +ellps=GRS80 +units=m +no_defs +towgs84=0,0,0,-0,-0,-0,0\";\r\n    var secondProjection = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\";\r\n    var coordinates = proj4(firstProjection, secondProjection, [a, b]);\r\n    return coordinates;\r\n  }\r\n\r\n  var crs = new L.Proj.CRS.TMS('EPSG:3067',\r\n    '+proj=utm +zone=35 +ellps=GRS80 +units=m +towgs84=0,0,0,-0,-0,-0,0 +no_defs', [-548576.0, 6291456.0, 1548576.0, 8388608], {\r\n      resolutions: [\r\n        8192,\r\n        4096,\r\n        2048,\r\n        1024,\r\n        512,\r\n        256,\r\n        128,\r\n        64,\r\n        32,\r\n        16,\r\n        8,\r\n        4,\r\n        2,\r\n        1,\r\n        0.5,\r\n        0.25\r\n      ]\r\n    });\r\n\r\n  var mymap = new L.Map('map', {\r\n    crs: crs,\r\n    continuousWorld: true,\r\n    worldCopyJump: false,\r\n    zoomControl: true,\r\n    layers: []\r\n  });\r\n\r\n  var tileUrl = 'https://{s}.kapsi.fi/mapcache/peruskartta_3067/{z}/{x}/{y}.png';\r\n  var attrib = '&copy; Karttamateriaali <a href=\"http://www.maanmittauslaitos.fi/avoindata\">Maanmittauslaitos</a>';\r\n  var tilelayer = new L.Proj.TileLayer.TMS(tileUrl, crs, {\r\n      maxZoom: 14,\r\n      minZoom: 0,\r\n      tileSize: 256,\r\n      tms: false,\r\n      continuousWorld: true,\r\n      attribution: attrib,\r\n      subdomains: ['tile1', 'tile2']\r\n    });\r\n\r\n  // var tutkalayer = new L.tileLayer(\"/img/sade-tutka.png\", {\r\n  //   attribution: \"tutka kartta\"\r\n  // }).addTo(mymap);\r\n\r\n  // tutkan koordinatit parsittu fmi-xml:stä gml-coordinates nimellä\r\n  // -118331.366 7907751.537 875567.732 7907751.537 875567.732 6335621.167 -118331.366 6335621.167 -118331.366 7907751.537\r\n  console.log(conversion(7907751.537, -118331.366));\r\n  console.log(conversion(-118331.366, 7907751.537));\r\n  console.log(conversion(875567.732, 7907751.537));\r\n  console.log(conversion(875567.732, 6335621.167));\r\n  console.log(conversion(-118331.366, 6335621.167));\r\n  console.log(conversion(-118331.366, 7907751.537));\r\n  // var tutkakuvaBounds = [\r\n    // [33.18909488231688, 57.01073316247846],  // oikea yläkulma\r\n    // [10.2139235307523, 70.49988067141419], // vasen yläkulma\r\n    // [37.37170826858529, 70.9830591433417], // vasen\r\n    // [16.86739870411734, 56.75131897332151],\r\n    // [10.2139235307523, 70.49988067141419]\r\n  // ];\r\n\r\n  var tutkakuvaUrl = '/img/sade-tutka.png';\r\n  // var tutkakuvaBounds = [\r\n  //   [70.49988067141419, 10.2139235307523],\r\n  //   [57.01073316247846, 33.18909488231688]\r\n  // ];\r\n\r\n  var tutkakuvaBounds = [\r\n    [57.01073316247846, 35.67170826858529],\r\n    [70.49988067141419, 8.5139235307523],\r\n  ];\r\n\r\n  L.imageOverlay(tutkakuvaUrl, tutkakuvaBounds).addTo(mymap);\r\n\r\n  mymap.addLayer(tilelayer);\r\n  mymap.setView([65.01275, 25.46815], 2);\r\n\r\n  function addMarker(a, b) {\r\n    var coord = conversion(a, b);\r\n    var markern = L.marker([coord[1], coord[0]]).addTo(mymap);\r\n  }\r\n\r\n  var oikeaTuppi = L.marker([10.2139235307523, 70.49988067141419]).bindPopup(\"Oikea tuppi\").openPopup();\r\n  // var oikeaYla = L.marker([70.49988067141419, 10.2139235307523]).bindPopup(\"Oikea yläkulma\").openPopup();\r\n  var vasenYla = L.marker([70.49988067141419, 37.37170826858529]).bindPopup(\"Vasen yläkulma\").openPopup();\r\n  var oikeaAla = L.marker([57.01073316247846, 10.2139235307523]).bindPopup(\"Oikea alakulma\").openPopup();\r\n  var vasenAla = L.marker([57.01073316247846, 37.37170826858529]).bindPopup(\"Vasen alakulma\").openPopup();\r\n\r\n  var vimpeli = L.marker([63.10, 23.82]).bindPopup(\"Vimpelin tutka-asema\").openPopup();\r\n  var utajarvi = L.marker([64.77, 26.32]).bindPopup(\"Utajärven tutka-asema\").openPopup();\r\n  var petajavesi = L.marker([62.30, 25.44]).bindPopup(\"Petäjäveden tutka-asema\").openPopup();\r\n  var kuopio = L.marker([62.86, 27.38]).bindPopup(\"Kuopion tutka-asema\").openPopup();\r\n  var kitee = L.marker([61.91, 29.80]).bindPopup(\"Kiteen tutka-asema\").openPopup();\r\n\r\n  var joku2 = L.marker([65.01275, 25.56815]).bindPopup(\"<a target='_blank' href='https://google.com'>I am a popup.</a>\").openPopup();\r\n  var joku = L.marker([65.01275, 25.46815]).bindPopup(\"<a target='_blank' href='https://google.com'>I am a popup.</a>\").openPopup();\r\n\r\n  var jokuryhma = L.layerGroup([oikeaTuppi, vasenYla, oikeaAla, vasenAla, vimpeli, utajarvi, petajavesi, kuopio, kitee, joku2, joku]);\r\n\r\n  var circle = L.circle([65.01275, 25.46815], 500, {\r\n    color: 'red',\r\n    fillColor: '#f03',\r\n    fillOpacity: 0.5\r\n  }).addTo(mymap);\r\n\r\n  jokuryhma.addTo(mymap);\r\n}])\r\n\nNoahsApp.directive(\"navDirective\", function() {\r\n  return {\r\n    templateUrl: \"app/components/nav/nav.html\",    \r\n  }\r\n})\r\n\nNoahsApp.controller(\"PumpController\", [\"$scope\", \"$stateParams\", \"PumpService\", function($scope, $stateParams, PumpService) {\r\n  $scope.id = $stateParams.id;\r\n}])\r\n"]}